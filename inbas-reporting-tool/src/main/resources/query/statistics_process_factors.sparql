PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

PREFIX ufo: <http://onto.fel.cvut.cz/ontologies/ufo/>
PREFIX doc: <http://onto.fel.cvut.cz/ontologies/documentation/>
PREFIX aso: <http://onto.fel.cvut.cz/ontologies/aviation-safety/>
PREFIX rt: <http://onto.fel.cvut.cz/ontologies/reporting-tool/>
PREFIX stamp: <http://onto.fel.cvut.cz/ontologies/stamp/>
PREFIX ecc430: <http://onto.fel.cvut.cz/ontologies/eccairs/aviation-3.4.0.2/vl-a-430/>

PREFIX er: <http://dev.inbas.cz/rdf4j-server/repositories/>

SELECT * {
    {   # This branch takes care of event of which the central_type is a factor
        ?report doc:documents ?occurrence .
        FILTER NOT EXISTS {
          ?report <http://onto.fel.cvut.cz/ontologies/reporting-tool/model/has_next_revision> ?y .
        }
        ?occurrence ufo:has_part+ ?ct .

        ?ct rt:has_event_type ?central_type .
        ?ct ufo:has_part+ ?devOne .

        ?devOne a ?devOneType .
        SERVICE ?eventTypesRepository {?devOneType a stamp:unsafe-event.}

        ?devTwo aso:has_factor* ?devOne .
        ?devTwo a ?devTwoType .
        SERVICE ?eventTypesRepository {?devTwoType a stamp:unsafe-event.}

        ?ft ufo:has_part ?devTwo ;
            rt:has_event_type ?event_f_t .

        # process of factor
        OPTIONAL{
            ?pft ufo:has_part ?ft;
                rt:has_event_type ?process_f_t.
                FILTER(?process_f_t != ecc430:v-24)
        }

        ?devThree aso:has_factor [
            a aso:factor;
            a ?rt ;
            aso:has_factor ?devTwo
          ] .

        {
            ?devThree a stamp:loss-event;
                rt:has_event_type ?event_e_t.
        }UNION{
            FILTER NOT EXISTS {?devThree a stamp:loss-event.}
            ?evt ufo:has_part ?devThree ;
              rt:has_event_type ?event_e_t .

            OPTIONAL{
                ?pevt ufo:has_part ?evt;
                    rt:has_event_type ?process_e_t.
                    FILTER(?process_e_t != ecc430:v-24)
            }
        }
        FILTER (?rt != aso:factor)
    }
    UNION
    {   # This branch takes care of factors of the central_type
        ?report doc:documents ?occurrence .
        FILTER NOT EXISTS {
          ?report <http://onto.fel.cvut.cz/ontologies/reporting-tool/model/has_next_revision> ?y .
        }
        ?occurrence ufo:has_part+ ?ct .

        ?ct rt:has_event_type ?central_type .
        ?ct ufo:has_part+ ?devOne .
        ?devOne a ?devOneType .

        SERVICE ?eventTypesRepository { ?devOneType a stamp:unsafe-event.}

        ?devOne aso:has_factor* ?devTwo .
        ?devTwo a ?devTwoType .

        SERVICE ?eventTypesRepository {?devTwoType a stamp:unsafe-event.}

        ?et ufo:has_part ?devTwo ;
            rt:has_event_type ?event_e_t .

        # process of factor
        OPTIONAL{
            ?pet ufo:has_part ?et;
                rt:has_event_type ?process_e_t.
                FILTER(?process_e_t != ecc430:v-24)
        }


        OPTIONAL {
            ?devTwo aso:has_factor [
                            a aso:factor;
                            a ?rt ;
                            aso:has_factor ?devThree
                        ] .

            {
                ?devThree a stamp:loss-event;
                    rt:has_event_type ?event_f_t.
            }UNION{
                ?evt ufo:has_part ?devThree ;
                    rt:has_event_type ?event_f_t .
                OPTIONAL{
                    ?pevt ufo:has_part ?evt;
                        rt:has_event_type ?process_f_t.
                        FILTER(?process_f_t != ecc430:v-24)
                }
            }

            FILTER (?rt != aso:factor)
        }
    }


    BIND(COALESCE(?event_e_t,"NONE") AS ?event_type)
    BIND(COALESCE(?event_f_t,"NONE") AS ?factor_type)
    BIND(COALESCE(?process_e_t,"NONE") AS ?process_event_type)
    BIND(COALESCE(?process_f_t,"NONE") AS ?process_factor_type)
    BIND(COALESCE(?rt,"NONE") AS ?relation_type)
}